{"ast":null,"code":"import { createEffect, ofType } from '@ngrx/effects';\nimport { tap, withLatestFrom, map } from 'rxjs/operators';\nimport * as CartActions from './cart.actions';\nimport { selectCartState } from './cart.selectors';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@ngrx/effects\";\nimport * as i2 from \"@ngrx/store\";\nlet CartEffects = /*#__PURE__*/(() => {\n  class CartEffects {\n    constructor(actions$, store) {\n      this.actions$ = actions$;\n      this.store = store;\n      this.saveCart$ = createEffect(() => this.actions$.pipe(ofType(CartActions.addToCart, CartActions.removeFromCart, CartActions.updateQuantity, CartActions.clearCart), withLatestFrom(this.store.select(selectCartState)), tap(([action, state]) => {\n        localStorage.setItem('cart', JSON.stringify(state));\n      }), map(() => CartActions.saveCartSuccess())));\n    }\n    static {\n      this.ɵfac = function CartEffects_Factory(t) {\n        return new (t || CartEffects)(i0.ɵɵinject(i1.Actions), i0.ɵɵinject(i2.Store));\n      };\n    }\n    static {\n      this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n        token: CartEffects,\n        factory: CartEffects.ɵfac\n      });\n    }\n  }\n  return CartEffects;\n})();\nexport { CartEffects };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}