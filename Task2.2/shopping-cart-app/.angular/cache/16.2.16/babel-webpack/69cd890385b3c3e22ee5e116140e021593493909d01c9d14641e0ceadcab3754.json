{"ast":null,"code":"import { createEffect, ofType } from '@ngrx/effects';\nimport { tap, withLatestFrom, map } from 'rxjs/operators';\nimport * as CartActions from './cart.actions';\nimport { selectCartState } from './cart.selectors';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@ngrx/effects\";\nimport * as i2 from \"@ngrx/store\";\nclass CartEffects {\n  constructor(actions$, store) {\n    this.actions$ = actions$;\n    this.store = store;\n    this.saveCart$ = createEffect(() => this.actions$.pipe(ofType(CartActions.addToCart, CartActions.removeFromCart, CartActions.updateQuantity, CartActions.clearCart), withLatestFrom(this.store.select(selectCartState)), tap(([action, state]) => {\n      localStorage.setItem('cart', JSON.stringify(state));\n    }), map(() => CartActions.saveCartSuccess())));\n  }\n  static {\n    this.ɵfac = function CartEffects_Factory(t) {\n      return new (t || CartEffects)(i0.ɵɵinject(i1.Actions), i0.ɵɵinject(i2.Store));\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: CartEffects,\n      factory: CartEffects.ɵfac\n    });\n  }\n}\nexport { CartEffects };","map":{"version":3,"names":["createEffect","ofType","tap","withLatestFrom","map","CartActions","selectCartState","CartEffects","constructor","actions$","store","saveCart$","pipe","addToCart","removeFromCart","updateQuantity","clearCart","select","action","state","localStorage","setItem","JSON","stringify","saveCartSuccess","i0","ɵɵinject","i1","Actions","i2","Store","factory","ɵfac"],"sources":["/Users/bhumi/Desktop/Copilot/shopping-cart-app/src/app/state/cart/cart.effects.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { Actions, createEffect, ofType } from '@ngrx/effects';\nimport { Store } from '@ngrx/store';\nimport { tap, withLatestFrom, map } from 'rxjs/operators';\nimport * as CartActions from './cart.actions';\nimport { selectCartState } from './cart.selectors';\n\n@Injectable()\nexport class CartEffects {\n  saveCart$ = createEffect(() => this.actions$.pipe(\n    ofType(\n      CartActions.addToCart,\n      CartActions.removeFromCart,\n      CartActions.updateQuantity,\n      CartActions.clearCart\n    ),\n    withLatestFrom(this.store.select(selectCartState)),\n    tap(([action, state]) => {\n      localStorage.setItem('cart', JSON.stringify(state));\n    }),\n    map(() => CartActions.saveCartSuccess())\n  ));\n\n  constructor(\n    private actions$: Actions,\n    private store: Store\n  ) {}\n}"],"mappings":"AACA,SAAkBA,YAAY,EAAEC,MAAM,QAAQ,eAAe;AAE7D,SAASC,GAAG,EAAEC,cAAc,EAAEC,GAAG,QAAQ,gBAAgB;AACzD,OAAO,KAAKC,WAAW,MAAM,gBAAgB;AAC7C,SAASC,eAAe,QAAQ,kBAAkB;;;;AAElD,MACaC,WAAW;EAetBC,YACUC,QAAiB,EACjBC,KAAY;IADZ,KAAAD,QAAQ,GAARA,QAAQ;IACR,KAAAC,KAAK,GAALA,KAAK;IAhBf,KAAAC,SAAS,GAAGX,YAAY,CAAC,MAAM,IAAI,CAACS,QAAQ,CAACG,IAAI,CAC/CX,MAAM,CACJI,WAAW,CAACQ,SAAS,EACrBR,WAAW,CAACS,cAAc,EAC1BT,WAAW,CAACU,cAAc,EAC1BV,WAAW,CAACW,SAAS,CACtB,EACDb,cAAc,CAAC,IAAI,CAACO,KAAK,CAACO,MAAM,CAACX,eAAe,CAAC,CAAC,EAClDJ,GAAG,CAAC,CAAC,CAACgB,MAAM,EAAEC,KAAK,CAAC,KAAI;MACtBC,YAAY,CAACC,OAAO,CAAC,MAAM,EAAEC,IAAI,CAACC,SAAS,CAACJ,KAAK,CAAC,CAAC;IACrD,CAAC,CAAC,EACFf,GAAG,CAAC,MAAMC,WAAW,CAACmB,eAAe,EAAE,CAAC,CACzC,CAAC;EAKC;;;uBAlBQjB,WAAW,EAAAkB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,OAAA,GAAAH,EAAA,CAAAC,QAAA,CAAAG,EAAA,CAAAC,KAAA;IAAA;EAAA;;;aAAXvB,WAAW;MAAAwB,OAAA,EAAXxB,WAAW,CAAAyB;IAAA;EAAA;;SAAXzB,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}