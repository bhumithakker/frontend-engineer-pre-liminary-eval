apiVersion: batch/v1
kind: Job
metadata:
  name: {{ .Release.Name }}-cloudflare-cache-purge
  annotations:
    "helm.sh/hook": post-upgrade
    "helm.sh/hook-weight": "0"
    "helm.sh/hook-delete-policy": hook-succeeded,hook-failed
spec:
  template:
    metadata:
      name: {{ .Release.Name }}-cloudflare-cache-purge
    spec:
      restartPolicy: Never
      containers:
      - name: cloudflare-purge
        image: curlimages/curl:7.83.1
        env:
        - name: CF_AUTH_EMAIL
          valueFrom:
            secretKeyRef:
              name: {{ .Values.cloudflare.secretName | default (printf "%s-cloudflare-credentials" .Release.Name) }}
              key: email
        - name: CF_AUTH_KEY
          valueFrom:
            secretKeyRef:
              name: {{ .Values.cloudflare.secretName | default (printf "%s-cloudflare-credentials" .Release.Name) }}
              key: apiKey
        - name: CF_ZONE_ID
          valueFrom:
            secretKeyRef:
              name: {{ .Values.cloudflare.secretName | default (printf "%s-cloudflare-credentials" .Release.Name) }}
              key: zoneId
        command:
        - /bin/sh
        - -c
        - |
          echo "Starting Cloudflare cache purge after Helm upgrade of {{ .Release.Name }}..."
          
          # Purge everything (adjust as needed for more selective purging)
          curl -X POST "https://api.cloudflare.com/client/v4/zones/$CF_ZONE_ID/purge_cache" \
            -H "X-Auth-Email: $CF_AUTH_EMAIL" \
            -H "X-Auth-Key: $CF_AUTH_KEY" \
            -H "Content-Type: application/json" \
            --data '{"purge_everything":true}' \
            --retry 3 \
            --retry-delay 5
          
          STATUS=$?
          if [ $STATUS -eq 0 ]; then
            echo "Cache purge completed successfully"
            exit 0
          else
            echo "Cache purge failed with status $STATUS"
            exit 1
          fi
