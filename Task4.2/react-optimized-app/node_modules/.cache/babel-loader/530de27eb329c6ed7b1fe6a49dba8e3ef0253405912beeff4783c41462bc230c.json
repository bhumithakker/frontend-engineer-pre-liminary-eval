{"ast":null,"code":"var _jsxFileName = \"/Users/bhumi/Desktop/Copilot/react-optimized-app/src/components/HeavyFeature.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\n\n// This simulates a heavy component that would benefit from code splitting\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst HeavyFeature = () => {\n  _s();\n  const [data, setData] = useState(['Item 1', 'Item 2', 'Item 3', 'Item 4', 'Item 5']);\n  const addItem = () => {\n    setData([...data, `Item ${data.length + 1}`]);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"heavy-feature\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Heavy Feature Component\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"This component is loaded dynamically only when needed.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: data.map((item, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: item\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: addItem,\n      children: \"Add Item\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n};\n_s(HeavyFeature, \"flFknyERZta00zNjaABWJvyxX4k=\");\n_c = HeavyFeature;\nexport default HeavyFeature;\nvar _c;\n$RefreshReg$(_c, \"HeavyFeature\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","HeavyFeature","_s","data","setData","addItem","length","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","item","index","onClick","_c","$RefreshReg$"],"sources":["/Users/bhumi/Desktop/Copilot/react-optimized-app/src/components/HeavyFeature.tsx"],"sourcesContent":["import React, { useState } from 'react';\n\n// This simulates a heavy component that would benefit from code splitting\nconst HeavyFeature: React.FC = () => {\n  const [data, setData] = useState<string[]>([\n    'Item 1', 'Item 2', 'Item 3', 'Item 4', 'Item 5'\n  ]);\n\n  const addItem = () => {\n    setData([...data, `Item ${data.length + 1}`]);\n  };\n\n  return (\n    <div className=\"heavy-feature\">\n      <h3>Heavy Feature Component</h3>\n      <p>This component is loaded dynamically only when needed.</p>\n      <ul>\n        {data.map((item, index) => (\n          <li key={index}>{item}</li>\n        ))}\n      </ul>\n      <button onClick={addItem}>Add Item</button>\n    </div>\n  );\n};\n\nexport default HeavyFeature;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;;AAEvC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,YAAsB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnC,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGN,QAAQ,CAAW,CACzC,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,CACjD,CAAC;EAEF,MAAMO,OAAO,GAAGA,CAAA,KAAM;IACpBD,OAAO,CAAC,CAAC,GAAGD,IAAI,EAAE,QAAQA,IAAI,CAACG,MAAM,GAAG,CAAC,EAAE,CAAC,CAAC;EAC/C,CAAC;EAED,oBACEN,OAAA;IAAKO,SAAS,EAAC,eAAe;IAAAC,QAAA,gBAC5BR,OAAA;MAAAQ,QAAA,EAAI;IAAuB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAChCZ,OAAA;MAAAQ,QAAA,EAAG;IAAsD;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,eAC7DZ,OAAA;MAAAQ,QAAA,EACGL,IAAI,CAACU,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,kBACpBf,OAAA;QAAAQ,QAAA,EAAiBM;MAAI,GAAZC,KAAK;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAY,CAC3B;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC,eACLZ,OAAA;MAAQgB,OAAO,EAAEX,OAAQ;MAAAG,QAAA,EAAC;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACxC,CAAC;AAEV,CAAC;AAACV,EAAA,CArBID,YAAsB;AAAAgB,EAAA,GAAtBhB,YAAsB;AAuB5B,eAAeA,YAAY;AAAC,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}