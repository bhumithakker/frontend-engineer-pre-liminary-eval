{"ast":null,"code":"var _jsxFileName = \"/Users/bhumi/Desktop/Copilot/react-optimized-app/src/index.tsx\";\nimport React from 'react';\nimport { hydrateRoot, createRoot } from 'react-dom/client';\nimport { BrowserRouter } from 'react-router-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n// Get the root element\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst rootElement = document.getElementById('root');\n\n// Check if the app is being hydrated from server-side rendering\nif (rootElement.hasChildNodes()) {\n  // Hydrate the app if it was server-rendered\n  hydrateRoot(rootElement, /*#__PURE__*/_jsxDEV(React.StrictMode, {\n    children: /*#__PURE__*/_jsxDEV(BrowserRouter, {\n      children: /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this));\n} else {\n  // Regular client-side rendering if there was no server rendering\n  const root = createRoot(rootElement);\n  root.render(/*#__PURE__*/_jsxDEV(React.StrictMode, {\n    children: /*#__PURE__*/_jsxDEV(BrowserRouter, {\n      children: /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this));\n}\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();","map":{"version":3,"names":["React","hydrateRoot","createRoot","BrowserRouter","App","reportWebVitals","jsxDEV","_jsxDEV","rootElement","document","getElementById","hasChildNodes","StrictMode","children","fileName","_jsxFileName","lineNumber","columnNumber","root","render"],"sources":["/Users/bhumi/Desktop/Copilot/react-optimized-app/src/index.tsx"],"sourcesContent":["import React from 'react';\nimport { hydrateRoot, createRoot } from 'react-dom/client';\nimport { BrowserRouter } from 'react-router-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n// Get the root element\nconst rootElement = document.getElementById('root') as HTMLElement;\n\n// Check if the app is being hydrated from server-side rendering\nif (rootElement.hasChildNodes()) {\n  // Hydrate the app if it was server-rendered\n  hydrateRoot(\n    rootElement,\n    <React.StrictMode>\n      <BrowserRouter>\n        <App />\n      </BrowserRouter>\n    </React.StrictMode>\n  );\n} else {\n  // Regular client-side rendering if there was no server rendering\n  const root = createRoot(rootElement);\n  root.render(\n    <React.StrictMode>\n      <BrowserRouter>\n        <App />\n      </BrowserRouter>\n    </React.StrictMode>\n  );\n}\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,EAAEC,UAAU,QAAQ,kBAAkB;AAC1D,SAASC,aAAa,QAAQ,kBAAkB;AAChD,OAAO,aAAa;AACpB,OAAOC,GAAG,MAAM,OAAO;AACvB,OAAOC,eAAe,MAAM,mBAAmB;;AAE/C;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,WAAW,GAAGC,QAAQ,CAACC,cAAc,CAAC,MAAM,CAAgB;;AAElE;AACA,IAAIF,WAAW,CAACG,aAAa,CAAC,CAAC,EAAE;EAC/B;EACAV,WAAW,CACTO,WAAW,eACXD,OAAA,CAACP,KAAK,CAACY,UAAU;IAAAC,QAAA,eACfN,OAAA,CAACJ,aAAa;MAAAU,QAAA,eACZN,OAAA,CAACH,GAAG;QAAAU,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACM;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CACpB,CAAC;AACH,CAAC,MAAM;EACL;EACA,MAAMC,IAAI,GAAGhB,UAAU,CAACM,WAAW,CAAC;EACpCU,IAAI,CAACC,MAAM,cACTZ,OAAA,CAACP,KAAK,CAACY,UAAU;IAAAC,QAAA,eACfN,OAAA,CAACJ,aAAa;MAAAU,QAAA,eACZN,OAAA,CAACH,GAAG;QAAAU,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACM;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CACpB,CAAC;AACH;;AAEA;AACA;AACA;AACAZ,eAAe,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}